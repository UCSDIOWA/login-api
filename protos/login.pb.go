// Code generated by protoc-gen-go. DO NOT EDIT.
// source: login.proto

package login

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SignUpRequest struct {
	Email                string                    `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string                    `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	FirstName            string                    `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	LastName             string                    `protobuf:"bytes,4,opt,name=last_name,json=lastName,proto3" json:"last_name,omitempty"`
	Secret               *SignUpRequest_SecretCode `protobuf:"bytes,5,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *SignUpRequest) Reset()         { *m = SignUpRequest{} }
func (m *SignUpRequest) String() string { return proto.CompactTextString(m) }
func (*SignUpRequest) ProtoMessage()    {}
func (*SignUpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c21677aa7f4e4f, []int{0}
}

func (m *SignUpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignUpRequest.Unmarshal(m, b)
}
func (m *SignUpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignUpRequest.Marshal(b, m, deterministic)
}
func (m *SignUpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignUpRequest.Merge(m, src)
}
func (m *SignUpRequest) XXX_Size() int {
	return xxx_messageInfo_SignUpRequest.Size(m)
}
func (m *SignUpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignUpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignUpRequest proto.InternalMessageInfo

func (m *SignUpRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SignUpRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *SignUpRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *SignUpRequest) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *SignUpRequest) GetSecret() *SignUpRequest_SecretCode {
	if m != nil {
		return m.Secret
	}
	return nil
}

type SignUpRequest_SecretCode struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Sent                 bool     `protobuf:"varint,2,opt,name=sent,proto3" json:"sent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignUpRequest_SecretCode) Reset()         { *m = SignUpRequest_SecretCode{} }
func (m *SignUpRequest_SecretCode) String() string { return proto.CompactTextString(m) }
func (*SignUpRequest_SecretCode) ProtoMessage()    {}
func (*SignUpRequest_SecretCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c21677aa7f4e4f, []int{0, 0}
}

func (m *SignUpRequest_SecretCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignUpRequest_SecretCode.Unmarshal(m, b)
}
func (m *SignUpRequest_SecretCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignUpRequest_SecretCode.Marshal(b, m, deterministic)
}
func (m *SignUpRequest_SecretCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignUpRequest_SecretCode.Merge(m, src)
}
func (m *SignUpRequest_SecretCode) XXX_Size() int {
	return xxx_messageInfo_SignUpRequest_SecretCode.Size(m)
}
func (m *SignUpRequest_SecretCode) XXX_DiscardUnknown() {
	xxx_messageInfo_SignUpRequest_SecretCode.DiscardUnknown(m)
}

var xxx_messageInfo_SignUpRequest_SecretCode proto.InternalMessageInfo

func (m *SignUpRequest_SecretCode) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *SignUpRequest_SecretCode) GetSent() bool {
	if m != nil {
		return m.Sent
	}
	return false
}

type SignUpResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignUpResponse) Reset()         { *m = SignUpResponse{} }
func (m *SignUpResponse) String() string { return proto.CompactTextString(m) }
func (*SignUpResponse) ProtoMessage()    {}
func (*SignUpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c21677aa7f4e4f, []int{1}
}

func (m *SignUpResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignUpResponse.Unmarshal(m, b)
}
func (m *SignUpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignUpResponse.Marshal(b, m, deterministic)
}
func (m *SignUpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignUpResponse.Merge(m, src)
}
func (m *SignUpResponse) XXX_Size() int {
	return xxx_messageInfo_SignUpResponse.Size(m)
}
func (m *SignUpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignUpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignUpResponse proto.InternalMessageInfo

func (m *SignUpResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type LogInRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogInRequest) Reset()         { *m = LogInRequest{} }
func (m *LogInRequest) String() string { return proto.CompactTextString(m) }
func (*LogInRequest) ProtoMessage()    {}
func (*LogInRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c21677aa7f4e4f, []int{2}
}

func (m *LogInRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogInRequest.Unmarshal(m, b)
}
func (m *LogInRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogInRequest.Marshal(b, m, deterministic)
}
func (m *LogInRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogInRequest.Merge(m, src)
}
func (m *LogInRequest) XXX_Size() int {
	return xxx_messageInfo_LogInRequest.Size(m)
}
func (m *LogInRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LogInRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LogInRequest proto.InternalMessageInfo

func (m *LogInRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LogInRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type LogInResponse struct {
	User                 *SignUpRequest `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *LogInResponse) Reset()         { *m = LogInResponse{} }
func (m *LogInResponse) String() string { return proto.CompactTextString(m) }
func (*LogInResponse) ProtoMessage()    {}
func (*LogInResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c21677aa7f4e4f, []int{3}
}

func (m *LogInResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogInResponse.Unmarshal(m, b)
}
func (m *LogInResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogInResponse.Marshal(b, m, deterministic)
}
func (m *LogInResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogInResponse.Merge(m, src)
}
func (m *LogInResponse) XXX_Size() int {
	return xxx_messageInfo_LogInResponse.Size(m)
}
func (m *LogInResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LogInResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LogInResponse proto.InternalMessageInfo

func (m *LogInResponse) GetUser() *SignUpRequest {
	if m != nil {
		return m.User
	}
	return nil
}

type ForgotPasswordRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForgotPasswordRequest) Reset()         { *m = ForgotPasswordRequest{} }
func (m *ForgotPasswordRequest) String() string { return proto.CompactTextString(m) }
func (*ForgotPasswordRequest) ProtoMessage()    {}
func (*ForgotPasswordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c21677aa7f4e4f, []int{4}
}

func (m *ForgotPasswordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForgotPasswordRequest.Unmarshal(m, b)
}
func (m *ForgotPasswordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForgotPasswordRequest.Marshal(b, m, deterministic)
}
func (m *ForgotPasswordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForgotPasswordRequest.Merge(m, src)
}
func (m *ForgotPasswordRequest) XXX_Size() int {
	return xxx_messageInfo_ForgotPasswordRequest.Size(m)
}
func (m *ForgotPasswordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ForgotPasswordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ForgotPasswordRequest proto.InternalMessageInfo

func (m *ForgotPasswordRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type ForgotPasswordResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ForgotPasswordResponse) Reset()         { *m = ForgotPasswordResponse{} }
func (m *ForgotPasswordResponse) String() string { return proto.CompactTextString(m) }
func (*ForgotPasswordResponse) ProtoMessage()    {}
func (*ForgotPasswordResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67c21677aa7f4e4f, []int{5}
}

func (m *ForgotPasswordResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ForgotPasswordResponse.Unmarshal(m, b)
}
func (m *ForgotPasswordResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ForgotPasswordResponse.Marshal(b, m, deterministic)
}
func (m *ForgotPasswordResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ForgotPasswordResponse.Merge(m, src)
}
func (m *ForgotPasswordResponse) XXX_Size() int {
	return xxx_messageInfo_ForgotPasswordResponse.Size(m)
}
func (m *ForgotPasswordResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ForgotPasswordResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ForgotPasswordResponse proto.InternalMessageInfo

func (m *ForgotPasswordResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*SignUpRequest)(nil), "login.SignUpRequest")
	proto.RegisterType((*SignUpRequest_SecretCode)(nil), "login.SignUpRequest.SecretCode")
	proto.RegisterType((*SignUpResponse)(nil), "login.SignUpResponse")
	proto.RegisterType((*LogInRequest)(nil), "login.LogInRequest")
	proto.RegisterType((*LogInResponse)(nil), "login.LogInResponse")
	proto.RegisterType((*ForgotPasswordRequest)(nil), "login.ForgotPasswordRequest")
	proto.RegisterType((*ForgotPasswordResponse)(nil), "login.ForgotPasswordResponse")
}

func init() { proto.RegisterFile("login.proto", fileDescriptor_67c21677aa7f4e4f) }

var fileDescriptor_67c21677aa7f4e4f = []byte{
	// 408 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0x41, 0xcb, 0xd3, 0x40,
	0x10, 0x25, 0xb5, 0x49, 0xdb, 0x49, 0x5b, 0x71, 0x4d, 0x25, 0xc4, 0x16, 0xcb, 0x9e, 0x4a, 0xc1,
	0x06, 0x22, 0x28, 0xf6, 0x24, 0x88, 0x42, 0x41, 0x8a, 0xa4, 0x78, 0x96, 0xb5, 0xdd, 0x86, 0x85,
	0x74, 0x37, 0x66, 0x37, 0x7a, 0xf0, 0xe6, 0x5f, 0xf0, 0xa7, 0xf9, 0x17, 0x3c, 0xfb, 0x1b, 0xa4,
	0x93, 0x4d, 0xb5, 0xb5, 0xfa, 0xc1, 0x77, 0xdb, 0x79, 0xef, 0xcd, 0x9b, 0x37, 0x13, 0x02, 0x7e,
	0xae, 0x32, 0x21, 0x17, 0x45, 0xa9, 0x8c, 0x22, 0x2e, 0x16, 0xd1, 0x38, 0x53, 0x2a, 0xcb, 0x79,
	0xcc, 0x0a, 0x11, 0x33, 0x29, 0x95, 0x61, 0x46, 0x28, 0xa9, 0x6b, 0x11, 0xfd, 0xe9, 0xc0, 0x60,
	0x23, 0x32, 0xf9, 0xae, 0x48, 0xf9, 0xc7, 0x8a, 0x6b, 0x43, 0x02, 0x70, 0xf9, 0x81, 0x89, 0x3c,
	0x74, 0xa6, 0xce, 0xac, 0x97, 0xd6, 0x05, 0x89, 0xa0, 0x5b, 0x30, 0xad, 0x3f, 0xab, 0x72, 0x17,
	0xb6, 0x90, 0x38, 0xd5, 0x64, 0x02, 0xb0, 0x17, 0xa5, 0x36, 0xef, 0x25, 0x3b, 0xf0, 0xf0, 0x0e,
	0xb2, 0x3d, 0x44, 0xd6, 0xec, 0xc0, 0xc9, 0x43, 0xe8, 0xe5, 0xac, 0x61, 0xdb, 0x75, 0xef, 0x11,
	0x40, 0xf2, 0x19, 0x78, 0x9a, 0x6f, 0x4b, 0x6e, 0x42, 0x77, 0xea, 0xcc, 0xfc, 0xe4, 0xd1, 0xa2,
	0x5e, 0xe1, 0x2c, 0xd3, 0x62, 0x83, 0x92, 0x97, 0x6a, 0xc7, 0x53, 0x2b, 0x8f, 0x9e, 0x02, 0xfc,
	0x46, 0x8f, 0xa1, 0x3f, 0xb1, 0xbc, 0xe2, 0x4d, 0x68, 0x2c, 0x08, 0x81, 0xb6, 0xe6, 0xd2, 0x60,
	0xe0, 0x6e, 0x8a, 0x6f, 0x3a, 0x87, 0x61, 0xe3, 0xad, 0x0b, 0x25, 0x35, 0x27, 0x21, 0x74, 0x74,
	0xb5, 0xdd, 0x72, 0xad, 0xb1, 0xbb, 0x9b, 0x36, 0x25, 0x7d, 0x01, 0xfd, 0x37, 0x2a, 0x5b, 0xc9,
	0x5b, 0x9f, 0x86, 0x3e, 0x87, 0x81, 0x75, 0xb0, 0xc3, 0x66, 0xd0, 0xae, 0x34, 0x2f, 0xd1, 0xc1,
	0x4f, 0x82, 0x6b, 0xdb, 0xa6, 0xa8, 0xa0, 0x8f, 0x61, 0xf4, 0x5a, 0x95, 0x99, 0x32, 0x6f, 0xad,
	0xd9, 0x7f, 0x53, 0xd0, 0x04, 0x1e, 0x5c, 0xca, 0x6f, 0xda, 0x2f, 0xd9, 0x80, 0x57, 0x4f, 0x26,
	0xab, 0xd3, 0xeb, 0x6a, 0xa4, 0x68, 0x74, 0x81, 0xd6, 0xd6, 0x94, 0x7c, 0xfd, 0xfe, 0xe3, 0x5b,
	0xab, 0x4f, 0x3b, 0xb1, 0x16, 0x99, 0xac, 0x8a, 0xa5, 0x33, 0x4f, 0xd6, 0xe0, 0xe2, 0xca, 0xe4,
	0x55, 0xf3, 0xb8, 0x6f, 0x9b, 0xff, 0xbc, 0x65, 0x14, 0x9c, 0x83, 0xd6, 0xf0, 0x1e, 0x1a, 0xfa,
	0xd4, 0x8b, 0x91, 0x3d, 0xfa, 0x7d, 0x81, 0xe1, 0xf9, 0x62, 0x44, 0xfc, 0x85, 0x8c, 0xad, 0xd9,
	0xd5, 0x83, 0x45, 0x93, 0x7f, 0xb0, 0x76, 0x66, 0x84, 0x33, 0x03, 0x7a, 0x37, 0xde, 0xa3, 0xa0,
	0xf9, 0x78, 0x4b, 0x67, 0xfe, 0xc1, 0xc3, 0xbf, 0xe4, 0xc9, 0xaf, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x1a, 0x8b, 0xc0, 0xfd, 0x59, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SignUpClient is the client API for SignUp service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SignUpClient interface {
	SignUp(ctx context.Context, in *SignUpRequest, opts ...grpc.CallOption) (*SignUpResponse, error)
}

type signUpClient struct {
	cc *grpc.ClientConn
}

func NewSignUpClient(cc *grpc.ClientConn) SignUpClient {
	return &signUpClient{cc}
}

func (c *signUpClient) SignUp(ctx context.Context, in *SignUpRequest, opts ...grpc.CallOption) (*SignUpResponse, error) {
	out := new(SignUpResponse)
	err := c.cc.Invoke(ctx, "/login.SignUp/SignUp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SignUpServer is the server API for SignUp service.
type SignUpServer interface {
	SignUp(context.Context, *SignUpRequest) (*SignUpResponse, error)
}

func RegisterSignUpServer(s *grpc.Server, srv SignUpServer) {
	s.RegisterService(&_SignUp_serviceDesc, srv)
}

func _SignUp_SignUp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignUpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SignUpServer).SignUp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/login.SignUp/SignUp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SignUpServer).SignUp(ctx, req.(*SignUpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SignUp_serviceDesc = grpc.ServiceDesc{
	ServiceName: "login.SignUp",
	HandlerType: (*SignUpServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SignUp",
			Handler:    _SignUp_SignUp_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "login.proto",
}

// LogInClient is the client API for LogIn service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogInClient interface {
	LogIn(ctx context.Context, in *LogInRequest, opts ...grpc.CallOption) (*LogInResponse, error)
}

type logInClient struct {
	cc *grpc.ClientConn
}

func NewLogInClient(cc *grpc.ClientConn) LogInClient {
	return &logInClient{cc}
}

func (c *logInClient) LogIn(ctx context.Context, in *LogInRequest, opts ...grpc.CallOption) (*LogInResponse, error) {
	out := new(LogInResponse)
	err := c.cc.Invoke(ctx, "/login.LogIn/LogIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogInServer is the server API for LogIn service.
type LogInServer interface {
	LogIn(context.Context, *LogInRequest) (*LogInResponse, error)
}

func RegisterLogInServer(s *grpc.Server, srv LogInServer) {
	s.RegisterService(&_LogIn_serviceDesc, srv)
}

func _LogIn_LogIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LogInRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogInServer).LogIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/login.LogIn/LogIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogInServer).LogIn(ctx, req.(*LogInRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LogIn_serviceDesc = grpc.ServiceDesc{
	ServiceName: "login.LogIn",
	HandlerType: (*LogInServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LogIn",
			Handler:    _LogIn_LogIn_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "login.proto",
}

// ForgotPasswordClient is the client API for ForgotPassword service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ForgotPasswordClient interface {
	ForgotPassword(ctx context.Context, in *ForgotPasswordRequest, opts ...grpc.CallOption) (*ForgotPasswordResponse, error)
}

type forgotPasswordClient struct {
	cc *grpc.ClientConn
}

func NewForgotPasswordClient(cc *grpc.ClientConn) ForgotPasswordClient {
	return &forgotPasswordClient{cc}
}

func (c *forgotPasswordClient) ForgotPassword(ctx context.Context, in *ForgotPasswordRequest, opts ...grpc.CallOption) (*ForgotPasswordResponse, error) {
	out := new(ForgotPasswordResponse)
	err := c.cc.Invoke(ctx, "/login.ForgotPassword/ForgotPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ForgotPasswordServer is the server API for ForgotPassword service.
type ForgotPasswordServer interface {
	ForgotPassword(context.Context, *ForgotPasswordRequest) (*ForgotPasswordResponse, error)
}

func RegisterForgotPasswordServer(s *grpc.Server, srv ForgotPasswordServer) {
	s.RegisterService(&_ForgotPassword_serviceDesc, srv)
}

func _ForgotPassword_ForgotPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ForgotPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ForgotPasswordServer).ForgotPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/login.ForgotPassword/ForgotPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ForgotPasswordServer).ForgotPassword(ctx, req.(*ForgotPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ForgotPassword_serviceDesc = grpc.ServiceDesc{
	ServiceName: "login.ForgotPassword",
	HandlerType: (*ForgotPasswordServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ForgotPassword",
			Handler:    _ForgotPassword_ForgotPassword_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "login.proto",
}
